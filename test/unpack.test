package require tcltest
set auto_path [list .. {*}$auto_path]
package require -exact msgpack 2.1.0

# Unpack nil

tcltest::test unpack-nil {unpack nil} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uC0
} -cleanup {
    $p destroy
} -returnCodes {ok} -result nil

# Unpack false

tcltest::test unpack-false {unpack false} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uC2
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{boolean 0}}

# Unpack true

tcltest::test unpack-true {unpack true} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uC3
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{boolean 1}}

# Unpack fix_numpos

tcltest::test unpack-fix_numpos {unpack fix_numpos} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \u00\u0A\u7F\u7F
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 0} {unsigned 10} {unsigned 127} {unsigned 127}}

# Unpack fix_numneg

tcltest::test unpack-fix_numneg {unpack fix_numneg} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uFF\uF6\uE0\uFF
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{integer -1} {integer -10} {integer -32} {integer -1}}

# Unpack fix_uint8

tcltest::test unpack-fix_uint8 {unpack fix_uint8} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uCC\u00\uCC\u0A\uCC\uFF
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 0} {unsigned 10} {unsigned 255}}

# Unpack fix_uint16

tcltest::test unpack-fix_uint16 {unpack fix_uint16} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uCD\u00\u00\uCD\u00\u0A\uCD\uFF\uFF
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 0} {unsigned 10} {unsigned 65535}}

# Unpack fix_uint32

tcltest::test unpack-fix_uint32 {unpack fix_uint32} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uCE\u00\u00\u00\u00\uCE\u00\u00\u00\u0A\uCE\uFF\uFF\uFF\uFF
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 0} {unsigned 10} {unsigned 4294967295}}

# Unpack fix_uint64

tcltest::test unpack-fix_uint64 {unpack fix_uint64} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uCF\u00\u00\u00\u00\u00\u00\u00\u00\uCF\u00\u00\u00\u00\u00\u00\u00\u0A\uCF\uFF\uFF\uFF\uFF\uFF\uFF\uFF\uFF
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 0} {unsigned 10} {unsigned 18446744073709551615}}

# Unpack int

tcltest::test unpack-int {unpack int} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \uD3\uFF\uFF\uFF\uFD\uAB\uF4\u1C\u00\uD2\uFF\u67\u69\u80\uD1\uD8\uF0\uD0\u9C\uF6\u0A\uD1\u27\u10\uD2\u00\u98\u96\u80\uD3\u00\u00\u00\u02\u54\u0B\uE4\u00
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{integer -10000000000} {integer -10000000} {integer -10000} {integer -100} {integer -10} {unsigned 10} {integer 10000} {integer 10000000} {integer 10000000000}}

# Unpack unsigned

tcltest::test unpack-unsigned {unpack unsigned} -setup {
    set p [msgpack::unpacker new]
} -body {
    $p unpack_string \u0a\uCC\uC8\uCD\u27\u10\uCE\u00\u98\u96\u80\uCF\u00\u00\u00\u02\u54\u0B\uE4\u00
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {{unsigned 10} {unsigned 200} {unsigned 10000} {unsigned 10000000} {unsigned 10000000000}}

# cleanup
::tcltest::cleanupTests
return
