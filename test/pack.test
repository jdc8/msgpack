package require tcltest
set auto_path [list .. {*}$auto_path]
package require -exact msgpack 2.1.0

# Pack nil

tcltest::test pack-nil {pack nil} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack nil
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uC0

# Pack false

tcltest::test pack-false {pack false} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack false
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uC2

# Pack true

tcltest::test pack-true {pack true} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack true
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uC3

# Pack fix_numpos

tcltest::test pack-fix_numpos {pack fix_numpos} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_numpos 0
    $p pack fix_numpos 10
    $p pack fix_numpos 0x7f
    $p pack fix_numpos 0xFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \u00\u0A\u7F\u7F

# Pack fix_numneg

tcltest::test pack-fix_numneg {pack fix_numneg} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_numneg -1
    $p pack fix_numneg -10
    $p pack fix_numneg -32
    $p pack fix_numneg 0xFFFFFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uFF\uF6\uE0\uFF

# Pack fix_uint8

tcltest::test pack-fix_uint8 {pack fix_uint8} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint8 0
    $p pack fix_uint8 10
    $p pack fix_uint8 0xFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCC\u00\uCC\u0A\uCC\uFF

# Pack fix_uint16

tcltest::test pack-fix_uint16 {pack fix_uint16} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint16 0
    $p pack fix_uint16 10
    $p pack fix_uint16 0xFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCD\u00\u00\uCD\u00\u0A\uCD\uFF\uFF

# Pack fix_uint32

tcltest::test pack-fix_uint32 {pack fix_uint32} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint32 0
    $p pack fix_uint32 10
    $p pack fix_uint32 0xFFFFFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCE\u00\u00\u00\u00\uCE\u00\u00\u00\u0A\uCE\uFF\uFF\uFF\uFF

# Pack fix_uint64

tcltest::test pack-fix_uint64 {pack fix_uint64} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint64 0
    $p pack fix_uint64 10
    $p pack fix_uint64 0xFFFFFFFFFFFFFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCF\u00\u00\u00\u00\u00\u00\u00\u00\uCF\u00\u00\u00\u00\u00\u00\u00\u0A\uCF\uFF\uFF\uFF\uFF\uFF\uFF\uFF\uFF

# Pack fix_int8

tcltest::test pack-fix_int8 {pack fix_int8} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int8 0
    $p pack fix_int8 10
    $p pack fix_int8 -10
    $p pack fix_int8 -0x80
    $p pack fix_int8 0x7F
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uD0\u00\uD0\u0A\uD0\uF6\uD0\u80\uD0\u7F

# Pack fix_int16

tcltest::test pack-fix_int16 {pack fix_int16} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int16 0
    $p pack fix_int16 10
    $p pack fix_int16 -10
    $p pack fix_int16 -0x8000
    $p pack fix_int16 0x7FFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uD1\u00\u00\uD1\u00\u0A\uD1\uFF\uF6\uD1\u80\u00\uD1\u7F\uFF

# Pack fix_int32

tcltest::test pack-fix_int32 {pack fix_int32} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int32 0
    $p pack fix_int32 10
    $p pack fix_int32 -10
    $p pack fix_int32 -0x80000000
    $p pack fix_int32 0x7FFFFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uD2\u00\u00\u00\u00\uD2\u00\u00\u00\u0A\uD2\uFF\uFF\uFF\uF6\uD2\u80\u00\u00\u00\uD2\u7F\uFF\uFF\uFF

# Pack fix_int64

tcltest::test pack-fix_int64 {pack fix_int64} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int64 0
    $p pack fix_int64 10
    $p pack fix_int64 -10
    $p pack fix_int64 -0x8000000000000000
    $p pack fix_int64 0x7FFFFFFFFFFFFFFF
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uD3\u00\u00\u00\u00\u00\u00\u00\u00\uD3\u00\u00\u00\u00\u00\u00\u00\u0A\uD3\uFF\uFF\uFF\uFF\uFF\uFF\uFF\uF6\uD3\u80\u00\u00\u00\u00\u00\u00\u00\uD3\u7F\uFF\uFF\uFF\uFF\uFF\uFF\uFF

# Pack fix_int32

tcltest::test pack-fix_float32 {pack fix_float32} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack float32 -1.414E-3
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCA\uBA\uB9\u55\uF8

# Pack fix_float64

tcltest::test pack-fix_float64 {pack fix_float64} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack float64 -3.1415E-25
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uCB\uBA\uD8\u4E\u61\uBE\u86\uF5\u34

# Pack string

tcltest::test pack-string-1 {pack string} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack string ""
    $p pack string " "
    $p pack string [string repeat " " 31]
    $p data
} -cleanup {
    $p destroy
} -returnCodes {ok} -result \uA0\uA1\u20\uBF\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20\u20

tcltest::test pack-string-2 {pack string} -setup {
    set p [msgpack::packer new]
} -body {
    set result {}
    $p pack string [string repeat " " 32]
    lappend result [string range [$p data] 0 2] [string length [$p data]]
    $p reset
    $p pack string [string repeat " " 255]
    lappend result [string range [$p data] 0 2] [string length [$p data]]
    set result
} -cleanup {
    $p destroy
} -returnCodes {ok} -result [list \uD9\u20\u20 34 \uD9\uFF\u20 257]

tcltest::test pack-string-3 {pack string} -setup {
    set p [msgpack::packer new]
} -body {
    set result {}
    $p pack string [string repeat " " 256]
    lappend result [string range [$p data] 0 3] [string length [$p data]]
    $p reset
    $p pack string [string repeat " " 65535]
    lappend result [string range [$p data] 0 3] [string length [$p data]]
    set result
} -cleanup {
    $p destroy
} -returnCodes {ok} -result [list \uDA\u01\u00\u20 259 \uDA\uFF\uFF\u20 65538]

tcltest::test pack-string-4 {pack string} -setup {
    set p [msgpack::packer new]
} -body {
    set result {}
    $p pack string [string repeat " " 65536]
    lappend result [string range [$p data] 0 5] [string length [$p data]]
    set result
} -cleanup {
    $p destroy
} -returnCodes {ok} -result [list \uDB\u00\u01\u00\u00\u20 65541]

# cleanup
::tcltest::cleanupTests
return
