package require tcltest
set auto_path [list .. {*}$auto_path]
package require -exact msgpack 2.1.0


# Pack nil

tcltest::test pack-nil {pack nil} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack nil
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {C0}

# Pack false

tcltest::test pack-false {pack false} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack false
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {C2}

# Pack true

tcltest::test pack-true {pack true} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack true
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {C3}

# Pack fix_numpos

tcltest::test pack-fix_numpos {pack fix_numpos} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_numpos 0
    $p pack fix_numpos 10
    $p pack fix_numpos 0x7f
    $p pack fix_numpos 0xFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {00 0A 7F 7F}

# Pack fix_numneg

tcltest::test pack-fix_numneg {pack fix_numneg} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_numneg -1
    $p pack fix_numneg -10
    $p pack fix_numneg -32
    $p pack fix_numneg 0xFFFFFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {FF F6 E0 FF}

# Pack fix_uint8

tcltest::test pack-fix_uint8 {pack fix_uint8} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint8 0
    $p pack fix_uint8 10
    $p pack fix_uint8 0xFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {CC 00 CC 0A CC FF}

# Pack fix_uint16

tcltest::test pack-fix_uint16 {pack fix_uint16} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint16 0
    $p pack fix_uint16 10
    $p pack fix_uint16 0xFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {CD 00 00 CD 00 0A CD FF FF}

# Pack fix_uint32

tcltest::test pack-fix_uint32 {pack fix_uint32} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint32 0
    $p pack fix_uint32 10
    $p pack fix_uint32 0xFFFFFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {CE 00 00 00 00 CE 00 00 00 0A CE FF FF FF FF}

# Pack fix_uint64

tcltest::test pack-fix_uint64 {pack fix_uint64} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_uint64 0
    $p pack fix_uint64 10
    $p pack fix_uint64 0xFFFFFFFFFFFFFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {CF 00 00 00 00 00 00 00 00 CF 00 00 00 00 00 00 00 0A CF FF FF FF FF FF FF FF FF}

# Pack fix_int8

tcltest::test pack-fix_int8 {pack fix_int8} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int8 0
    $p pack fix_int8 10
    $p pack fix_int8 -10
    $p pack fix_int8 -0x80
    $p pack fix_int8 0x7F
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {D0 00 D0 0A D0 F6 D0 80 D0 7F}

# Pack fix_int16

tcltest::test pack-fix_int16 {pack fix_int16} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int16 0
    $p pack fix_int16 10
    $p pack fix_int16 -10
    $p pack fix_int16 -0x8000
    $p pack fix_int16 0x7FFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {D1 00 00 D1 00 0A D1 FF F6 D1 80 00 D1 7F FF}

# Pack fix_int32

tcltest::test pack-fix_int32 {pack fix_int32} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int32 0
    $p pack fix_int32 10
    $p pack fix_int32 -10
    $p pack fix_int32 -0x80000000
    $p pack fix_int32 0x7FFFFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {D2 00 00 00 00 D2 00 00 00 0A D2 FF FF FF F6 D2 80 00 00 00 D2 7F FF FF FF}

# Pack fix_int64

tcltest::test pack-fix_int64 {pack fix_int64} -setup {
    set p [msgpack::packer new]
} -body {
    $p pack fix_int64 0
    $p pack fix_int64 10
    $p pack fix_int64 -10
    $p pack fix_int64 -0x8000000000000000
    $p pack fix_int64 0x7FFFFFFFFFFFFFFF
    $p as_readable_bytes
} -cleanup {
    $p destroy
} -returnCodes {ok} -result {D3 00 00 00 00 00 00 00 00 D3 00 00 00 00 00 00 00 0A D3 FF FF FF FF FF FF FF F6 D3 80 00 00 00 00 00 00 00 D3 7F FF FF FF FF FF FF FF}

# cleanup
::tcltest::cleanupTests
return
